#nullable enable
Microsoft.AspNetCore.Components.ComponentApplicationLifetime
Microsoft.AspNetCore.Components.ComponentApplicationLifetime.ComponentApplicationLifetime() -> void
Microsoft.AspNetCore.Components.ComponentApplicationLifetime.PauseAsync() -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Components.ComponentApplicationLifetime.PersistStateAsync(Microsoft.AspNetCore.Components.IComponentApplicationStateStore! store) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Components.ComponentApplicationLifetime.RestoreStateAsync(Microsoft.AspNetCore.Components.IComponentApplicationStateStore! store) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Components.ComponentApplicationLifetime.State.get -> Microsoft.AspNetCore.Components.ComponentApplicationState!
Microsoft.AspNetCore.Components.ComponentApplicationState
Microsoft.AspNetCore.Components.ComponentApplicationState.PersistState(string! key, byte[]! value) -> void
Microsoft.AspNetCore.Components.ComponentApplicationState.RegisterOnPersistingCallback(System.Func<System.Threading.Tasks.Task!>! callback) -> void
Microsoft.AspNetCore.Components.ComponentApplicationState.TryRetrievePersistedState(string! key, out byte[]! value) -> bool
Microsoft.AspNetCore.Components.DynamicComponent
Microsoft.AspNetCore.Components.DynamicComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle renderHandle) -> void
Microsoft.AspNetCore.Components.DynamicComponent.DynamicComponent() -> void
Microsoft.AspNetCore.Components.DynamicComponent.Parameters.get -> System.Collections.Generic.IDictionary<string!, object!>?
Microsoft.AspNetCore.Components.DynamicComponent.Parameters.set -> void
Microsoft.AspNetCore.Components.DynamicComponent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView parameters) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Components.DynamicComponent.Type.get -> System.Type!
Microsoft.AspNetCore.Components.DynamicComponent.Type.set -> void
Microsoft.AspNetCore.Components.IComponentApplicationStateStore
Microsoft.AspNetCore.Components.IComponentApplicationStateStore.GetPersistedState() -> System.Collections.Generic.IDictionary<string!, byte[]!>!
Microsoft.AspNetCore.Components.IComponentApplicationStateStore.PersistStateAsync(System.Collections.Generic.IReadOnlyDictionary<string!, byte[]!>! manager) -> System.Threading.Tasks.Task!
static Microsoft.AspNetCore.Components.ParameterView.FromDictionary(System.Collections.Generic.IDictionary<string!, object?>! parameters) -> Microsoft.AspNetCore.Components.ParameterView
virtual Microsoft.AspNetCore.Components.RenderTree.Renderer.DispatchEventAsync(ulong eventHandlerId, Microsoft.AspNetCore.Components.RenderTree.EventFieldInfo? fieldInfo, System.EventArgs! eventArgs) -> System.Threading.Tasks.Task!
