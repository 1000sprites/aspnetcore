<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <BlazorCacheBootResources>false</BlazorCacheBootResources>
    <RunAOTCompilation Condition="'$(RunAOTCompilation)' == ''">false</RunAOTCompilation>

    <RuntimeRepoDir>/home/steve/runtime/</RuntimeRepoDir>
    <MonoAOTCompilerDir>$(RuntimeRepoDir)artifacts/bin/MonoAOTCompiler/Debug/net5.0/</MonoAOTCompilerDir>
    <MonoAOTCompilerTasksAssemblyPath>$([MSBuild]::NormalizePath('$(MonoAOTCompilerDir)', 'MonoAOTCompiler.dll'))</MonoAOTCompilerTasksAssemblyPath>
    <RepoTasksDir>$(RuntimeRepoDir)src/tasks/</RepoTasksDir>
    <MicrosoftNetCoreAppRuntimePackDir>$(RuntimeRepoDir)artifacts/bin/microsoft.netcore.app.runtime.browser-wasm/Release/runtimes/browser-wasm/</MicrosoftNetCoreAppRuntimePackDir>
  </PropertyGroup>

  <Import Project="$(RepoTasksDir)AotCompilerTask\MonoAOTCompiler.props" />
  <UsingTask TaskName="MonoAOTCompiler"
             AssemblyFile="$(MonoAOTCompilerTasksAssemblyPath)" />

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <Reference Include="System.Net.Http.Json" />
  </ItemGroup>

  <!-- A bit of msbuild magic to support reference resolver tests -->
  <Target Name="CreateReferenceHintPathsList" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <_BclFile Include="$(ComponentsWebAssemblyBaseClassLibraryPath)*" />
      <_BclFile Include="$(ComponentsWebAssemblyBaseClassLibraryFacadesPath)*" />
      <_BclFile Include="$(ComponentsWebAssemblyFrameworkPath)*" />
    </ItemGroup>

    <WriteLinesToFile Lines="@(ReferencePath);@(ReferenceDependencyPaths)" File="$(IntermediateOutputPath)referenceHints.txt" WriteOnlyWhenDifferent="true" Overwrite="true" />
    <WriteLinesToFile Lines="@(_BclFile)" File="$(IntermediateOutputPath)bclLocations.txt" WriteOnlyWhenDifferent="true" Overwrite="true" />

    <ItemGroup>
      <EmbeddedResource Include="$(IntermediateOutputPath)bclLocations.txt" Link="bclLocations.txt" Type="Non-Resx" />
      <EmbeddedResource Include="$(IntermediateOutputPath)referenceHints.txt" Link="referenceHints.txt" Type="Non-Resx" />
    </ItemGroup>
  </Target>

  <Target Name="BuildApp" Condition="'$(RunAOTCompilation)' == 'true'" AfterTargets="CopyFilesToPublishDirectory" DependsOnTargets="Build">
    <ItemGroup>
      <AotInputAssemblies Include="$(PublishDir)wwwroot\_framework\*.dll">
        <AotArguments>@(MonoAOTCompilerDefaultAotArguments, ';')</AotArguments>
        <ProcessArguments>@(MonoAOTCompilerDefaultProcessArguments, ';')</ProcessArguments>
      </AotInputAssemblies>
    </ItemGroup>
    <Message Importance="High" Text="AotInputAssemblies: @(AotInputAssemblies)" />

    <Error Condition="'$(RunAOTCompilation)' == 'true' and '$(EMSDK_PATH)' == ''" Text="The EMSDK_PATH environment variable should be set pointing to the emscripten SDK root dir when using AOT."/>

    <MonoAOTCompiler
        Condition="'$(RunAOTCompilation)' == 'true'"
        CompilerBinaryPath="$(MicrosoftNetCoreAppRuntimePackDir)native\cross\mono-aot-cross"
        Mode="LLVMOnly"
        OutputType="AsmOnly"
        Assemblies="@(AotInputAssemblies)"
        UseAotDataFile="false"
        AotModulesTablePath="$(PublishDir)driver-gen.c"
        UseLLVM="true"
        LLVMPath="$(EMSDK_PATH)\upstream\bin">
        <Output TaskParameter="CompiledAssemblies" ItemName="BundleAssemblies" />
    </MonoAOTCompiler>

    <ReadLinesFromFile File="$(MicrosoftNetCoreAppRuntimePackDir)native\src\emcc-flags.txt">
        <Output TaskParameter="Lines" PropertyName="EmccFlags" />
    </ReadLinesFromFile>

    <ReadLinesFromFile File="$(MicrosoftNetCoreAppRuntimePackDir)native\src\emcc-version.txt">
        <Output TaskParameter="Lines" PropertyName="RuntimeEmccVersion" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <EmccFlags>$(EmccFlags) -s DISABLE_EXCEPTION_CATCHING=0</EmccFlags>
    </PropertyGroup>

    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="bash -c 'source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc --version | head -1 > emcc-version.txt'" ConsoleToMsBuild="true" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PublishDir)" />
    <ReadLinesFromFile Condition="'$(RunAOTCompilation)' == 'true'" File="$(PublishDir)\emcc-version.txt">
        <Output TaskParameter="Lines" PropertyName="EmccVersion" />
    </ReadLinesFromFile>
    <Error Condition="'$(RunAOTCompilation)' == 'true' and '$(RuntimeEmccVersion)' != '$(EmccVersion)'" Text="Emscripten version mismatch, expected '$(RuntimeEmccVersion)', got '$(EmccVersion)'"/>

    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="bash -c 'source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DCORE_BINDINGS -DENABLE_AOT=1 -DDRIVER_GEN=1 -I$(MicrosoftNetCoreAppRuntimePackDir)native/include/mono-2.0 -I$(MicrosoftNetCoreAppRuntimePackDir)native/include/wasm -I$(PublishDir) -I$(PublishDir)wwwroot\_framework\ $(MicrosoftNetCoreAppRuntimePackDir)native/src/driver.c -c -o driver.o'" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PublishDir)wwwroot\_framework\" />
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="bash -c 'source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -I$(MicrosoftNetCoreAppRuntimePackDir)native/include/mono-2.0 $(MicrosoftNetCoreAppRuntimePackDir)native/src/corebindings.c -c -o corebindings.o'" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PublishDir)wwwroot\_framework\" />
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="bash -c 'source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) -DGEN_PINVOKE=1 -I$(MicrosoftNetCoreAppRuntimePackDir)native/include/wasm $(MicrosoftNetCoreAppRuntimePackDir)native/src/pinvoke.c -c -o pinvoke.o'" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PublishDir)wwwroot\_framework\" />
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="bash -c 'source $(EMSDK_PATH)/emsdk_env.sh &amp;&amp; emcc $(EmccFlags) --js-library $(MicrosoftNetCoreAppRuntimePackDir)native/src/library_mono.js --js-library $(MicrosoftNetCoreAppRuntimePackDir)native/src/binding_support.js --js-library $(MicrosoftNetCoreAppRuntimePackDir)native/src/dotnet_support.js --js-library $(MicrosoftNetCoreAppRuntimePackDir)native/src/pal_random.js driver.o pinvoke.o corebindings.o @(BundleAssemblies->'%(LlvmBitcodeFile)', ' ') libmono-ee-interp.a libmonosgen-2.0.a libmono-ilgen.a libmono-icall-table.a libSystem.Native.a libSystem.IO.Compression.Native.a libicuuc.a libicui18n.a -o dotnet.js'" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PublishDir)wwwroot\_framework\" />

    <!-- Run mono-cil-strip on the assemblies
    <ItemGroup>
      <_managedAppAssemblies Include="$(AppDir)managed\*.dll"/>
    </ItemGroup>
    <Exec Condition="'$(RunAOTCompilation)' == 'true'" Command="mono-cil-strip %(_managedAppAssemblies.Identity)" />
    -->
  </Target>

</Project>
