#nullable enable
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.AllowedHosts.get -> System.Collections.Generic.IList<string>
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.AllowedHosts.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedForHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedForHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedHostHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedHostHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedProtoHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedProtoHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.KnownNetworks.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.HttpOverrides.IPNetwork>
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.KnownProxies.get -> System.Collections.Generic.IList<System.Net.IPAddress>
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalForHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalForHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalHostHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalHostHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalProtoHeaderName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalProtoHeaderName.set -> void
*REMOVED*~Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions.FormFieldName.get -> string
*REMOVED*~Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions.FormFieldName.set -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingMiddleware.CertificateForwardingMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions> options) -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext httpContext) -> System.Threading.Tasks.Task
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.CertificateHeader.get -> string
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.CertificateHeader.set -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.HeaderConverter -> System.Func<string, System.Security.Cryptography.X509Certificates.X509Certificate2>
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.ApplyForwarders(Microsoft.AspNetCore.Http.HttpContext context) -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.ForwardedHeadersMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.ForwardedHeadersOptions> options) -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext context) -> System.Threading.Tasks.Task
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.HttpMethodOverrideMiddleware.HttpMethodOverrideMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions> options) -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.HttpMethodOverrideMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext context) -> System.Threading.Tasks.Task
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.IPNetwork.Contains(System.Net.IPAddress address) -> bool
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.IPNetwork.IPNetwork(System.Net.IPAddress prefix, int prefixLength) -> void
*REMOVED*~Microsoft.AspNetCore.HttpOverrides.IPNetwork.Prefix.get -> System.Net.IPAddress
*REMOVED*~static Microsoft.AspNetCore.Builder.CertificateForwardingBuilderExtensions.UseCertificateForwarding(this Microsoft.AspNetCore.Builder.IApplicationBuilder app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*~static Microsoft.AspNetCore.Builder.ForwardedHeadersExtensions.UseForwardedHeaders(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*~static Microsoft.AspNetCore.Builder.ForwardedHeadersExtensions.UseForwardedHeaders(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder, Microsoft.AspNetCore.Builder.ForwardedHeadersOptions options) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*~static Microsoft.AspNetCore.Builder.HttpMethodOverrideExtensions.UseHttpMethodOverride(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*~static Microsoft.AspNetCore.Builder.HttpMethodOverrideExtensions.UseHttpMethodOverride(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder, Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions options) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedForHeaderName.get -> string
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedHostHeaderName.get -> string
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedProtoHeaderName.get -> string
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalForHeaderName.get -> string
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalHostHeaderName.get -> string
*REMOVED*~static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalProtoHeaderName.get -> string
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateForwardingServiceExtensions.AddCertificateForwarding(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions> configure) -> Microsoft.Extensions.DependencyInjection.IServiceCollection
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.AllowedHosts.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.AllowedHosts.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedForHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedForHeaderName.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedHostHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedHostHeaderName.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedProtoHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.ForwardedProtoHeaderName.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.KnownNetworks.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.HttpOverrides.IPNetwork!>!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.KnownProxies.get -> System.Collections.Generic.IList<System.Net.IPAddress!>!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalForHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalForHeaderName.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalHostHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalHostHeaderName.set -> void
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalProtoHeaderName.get -> string!
Microsoft.AspNetCore.Builder.ForwardedHeadersOptions.OriginalProtoHeaderName.set -> void
Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions.FormFieldName.get -> string?
Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions.FormFieldName.set -> void
~Microsoft.AspNetCore.HttpOverrides.CertificateForwardingMiddleware.CertificateForwardingMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions!>! options) -> void
Microsoft.AspNetCore.HttpOverrides.CertificateForwardingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext! httpContext) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.CertificateHeader.get -> string!
Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.CertificateHeader.set -> void
Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions.HeaderConverter -> System.Func<string!, System.Security.Cryptography.X509Certificates.X509Certificate2!>!
Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.ApplyForwarders(Microsoft.AspNetCore.Http.HttpContext! context) -> void
~Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.ForwardedHeadersMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.ForwardedHeadersOptions!>! options) -> void
Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext! context) -> System.Threading.Tasks.Task!
~Microsoft.AspNetCore.HttpOverrides.HttpMethodOverrideMiddleware.HttpMethodOverrideMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions!>! options) -> void
Microsoft.AspNetCore.HttpOverrides.HttpMethodOverrideMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.HttpOverrides.IPNetwork.Contains(System.Net.IPAddress! address) -> bool
Microsoft.AspNetCore.HttpOverrides.IPNetwork.IPNetwork(System.Net.IPAddress! prefix, int prefixLength) -> void
Microsoft.AspNetCore.HttpOverrides.IPNetwork.Prefix.get -> System.Net.IPAddress!
static Microsoft.AspNetCore.Builder.CertificateForwardingBuilderExtensions.UseCertificateForwarding(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.ForwardedHeadersExtensions.UseForwardedHeaders(this Microsoft.AspNetCore.Builder.IApplicationBuilder! builder) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.ForwardedHeadersExtensions.UseForwardedHeaders(this Microsoft.AspNetCore.Builder.IApplicationBuilder! builder, Microsoft.AspNetCore.Builder.ForwardedHeadersOptions! options) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.HttpMethodOverrideExtensions.UseHttpMethodOverride(this Microsoft.AspNetCore.Builder.IApplicationBuilder! builder) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.HttpMethodOverrideExtensions.UseHttpMethodOverride(this Microsoft.AspNetCore.Builder.IApplicationBuilder! builder, Microsoft.AspNetCore.Builder.HttpMethodOverrideOptions! options) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedForHeaderName.get -> string!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedHostHeaderName.get -> string!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XForwardedProtoHeaderName.get -> string!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalForHeaderName.get -> string!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalHostHeaderName.get -> string!
static Microsoft.AspNetCore.HttpOverrides.ForwardedHeadersDefaults.XOriginalProtoHeaderName.get -> string!
static Microsoft.Extensions.DependencyInjection.CertificateForwardingServiceExtensions.AddCertificateForwarding(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.HttpOverrides.CertificateForwardingOptions!>! configure) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
